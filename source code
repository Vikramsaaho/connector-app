Install Flutter SDK: Flutter installation guide.
Set up Firebase: Firebase setup guide.
Install required libraries:
bash
Copy code
flutter pub add firebase_core firebase_auth cloud_firestore
flutter pub add provider
lib/
├── main.dart           # Entry point
├── screens/            # UI Screens
│   ├── login_screen.dart
│   ├── profile_screen.dart
│   ├── match_screen.dart
├── services/           # Firebase and backend services
│   ├── auth_service.dart
│   ├── firestore_service.dart
├── models/             # Data Models
│   ├── user_model.dart
├── widgets/            # Reusable widgets
│   ├── interest_chip.dart
│   ├── user_card.dart

import 'package:flutter/material.dart';
import 'package:firebase_core/firebase_core.dart';
import 'screens/login_screen.dart';

void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  await Firebase.initializeApp();
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      title: 'Connector App',
      home: LoginScreen(),
    );
  }
}
import 'package:flutter/material.dart';
import '../services/auth_service.dart';

class LoginScreen extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Center(
        child: ElevatedButton(
          onPressed: () async {
            await AuthService().signInWithGoogle();
            Navigator.pushReplacementNamed(context, '/profile');
          },
          child: Text('Login with Google'),
        ),
      ),
    );
  }
}
import 'package:firebase_auth/firebase_auth.dart';
import 'package:google_sign_in/google_sign_in.dart';

class AuthService {
  final FirebaseAuth _auth = FirebaseAuth.instance;
  final GoogleSignIn _googleSignIn = GoogleSignIn();

  Future<User?> signInWithGoogle() async {
    final GoogleSignInAccount? googleUser = await _googleSignIn.signIn();
    if (googleUser == null) return null;

    final GoogleSignInAuthentication googleAuth = await googleUser.authentication;
    final credential = GoogleAuthProvider.credential(
      accessToken: googleAuth.accessToken,
      idToken: googleAuth.idToken,
    );

    UserCredential userCredential = await _auth.signInWithCredential(credential);
    return userCredential.user;
  }
}
import 'package:flutter/material.dart';
import '../services/firestore_service.dart';

class ProfileScreen extends StatelessWidget {
  final _formKey = GlobalKey<FormState>();
  final List<String> interests = ['Music', 'Travel', 'Gaming', 'Reading'];

  @override
  Widget build(BuildContext context) {
    final TextEditingController nameController = TextEditingController();

    return Scaffold(
      appBar: AppBar(title: Text('Set Up Profile')),
      body: Form(
        key: _formKey,
        child: Padding(
          padding: EdgeInsets.all(16.0),
          child: Column(
            children: [
              TextFormField(
                controller: nameController,
                decoration: InputDecoration(labelText: 'Name'),
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Please enter your name';
                  }
                  return null;
                },
              ),
              SizedBox(height: 16),
              Wrap(
                spacing: 8.0,
                children: interests.map((interest) {
                  return FilterChip(
                    label: Text(interest),
                    selected: false,
                    onSelected: (selected) {
                      FirestoreService().addInterest(interest);
                    },
                  );
                }).toList(),
              ),
              SizedBox(height: 16),
              ElevatedButton(
                onPressed: () {
                  if (_formKey.currentState!.validate()) {
                    FirestoreService().saveUserProfile(nameController.text);
                    Navigator.pushReplacementNamed(context, '/matches');
                  }
                },
                child: Text('Save Profile'),
              ),
            ],
          ),
        ),
      ),
    );
  }
}
import 'package:cloud_firestore/cloud_firestore.dart';

class FirestoreService {
  final FirebaseFirestore _firestore = FirebaseFirestore.instance;

  Future<void> saveUserProfile(String name) async {
    final uid = 'YOUR_USER_ID'; // Replace with actual user ID from AuthService
    await _firestore.collection('users').doc(uid).set({'name': name, 'interests': []});
  }

  Future<void> addInterest(String interest) async {
    final uid = 'YOUR_USER_ID';
    await _firestore.collection('users').doc(uid).update({
      'interests': FieldValue.arrayUnion([interest]),
    });
  }

  Stream<List<Map<String, dynamic>>> getMatches() {
    return _firestore.collection('users').snapshots().map((snapshot) {
      return snapshot.docs.map((doc) => doc.data()).toList();
    });
  }
}
import 'package:cloud_firestore/cloud_firestore.dart';

class FirestoreService {
  final FirebaseFirestore _firestore = FirebaseFirestore.instance;

  Future<void> saveUserProfile(String name) async {
    final uid = 'YOUR_USER_ID'; // Replace with actual user ID from AuthService
    await _firestore.collection('users').doc(uid).set({'name': name, 'interests': []});
  }

  Future<void> addInterest(String interest) async {
    final uid = 'YOUR_USER_ID';
    await _firestore.collection('users').doc(uid).update({
      'interests': FieldValue.arrayUnion([interest]),
    });
  }

  Stream<List<Map<String, dynamic>>> getMatches() {
    return _firestore.collection('users').snapshots().map((snapshot) {
      return snapshot.docs.map((doc) => doc.data()).toList();
    });
  }
}
import 'package:flutter/material.dart';
import '../services/firestore_service.dart';

class MatchScreen extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text('Matches')),
      body: StreamBuilder<List<Map<String, dynamic>>>(
        stream: FirestoreService().getMatches(),
        builder: (context, snapshot) {
          if (!snapshot.hasData) {
            return Center(child: CircularProgressIndicator());
          }
          final matches = snapshot.data!;
          return ListView.builder(
            itemCount: matches.length,
            itemBuilder: (context, index) {
              final match = matches[index];
              return ListTile(
                title: Text(match['name']),
                subtitle: Text(match['interests'].join(', ')),
              );
            },
          );
        },
      ),
    );
  }
}
flutter run
